{"version":3,"file":"ngx-otp-input.mjs","sources":["../../../projects/ngx-otp-input/src/lib/component/ngx-otp-input.model.ts","../../../projects/ngx-otp-input/src/lib/ngx-otp-input.service.ts","../../../projects/ngx-otp-input/src/lib/pattern.directive.ts","../../../projects/ngx-otp-input/src/lib/component/ngx-otp-input.component.ts","../../../projects/ngx-otp-input/src/lib/component/ngx-otp-input.component.html","../../../projects/ngx-otp-input/src/lib/ngx-otp-input.module.ts","../../../projects/ngx-otp-input/src/public-api.ts","../../../projects/ngx-otp-input/src/ngx-otp-input.ts"],"sourcesContent":["export type NgxOtpStatus = 'success' | 'error' | null;\n\nexport enum NgxOtpBehavior {\n  DEFAULT,\n  LEGACY,\n}\n\nexport type NgxOtpStyles = {\n  container?: string | string[];\n  inputBox?: string | string[];\n  input?: string | string[];\n  inputFilled?: string | string[];\n  inputDisabled?: string | string[];\n  inputSuccess?: string | string[];\n  inputError?: string | string[];\n};\n\nexport interface NgxOtpInputConfig {\n  otpLength: number;\n  pattern?: RegExp;\n  autofocus?: boolean;\n  autoblur?: boolean;\n  isPasswordInput?: boolean;\n  ariaLabels?: string | string[];\n  numericInputMode?: boolean;\n  classList?: NgxOtpStyles;\n  behavior?: NgxOtpBehavior;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgxOtpInputService {\n  init2DArray(size: number): string[][] {\n    return new Array<string[]>(size).fill(new Array<string>());\n  }\n\n  toArray(value: string | string[]): string[] {\n    return Array.isArray(value) ? value : [value];\n  }\n\n  addItemToAll(source: string[][], items: string[]): string[][] {\n    if (source?.length > 0) {\n      return source.map((entry) => entry.concat(items));\n    }\n  }\n\n  removeItemFromAll(source: string[][], items: string[]): string[][] {\n    if (source?.length > 0) {\n      return source.map((entry) => entry.filter((item) => !items.includes(item)));\n    }\n  }\n\n  addItemAtIndex(\n    source: string[][],\n    index: number,\n    items: string[]\n  ): string[][] {\n    if (source?.length > 0) {\n      source[index] = source[index].concat(items);\n      return source;\n    }\n  }\n\n  removeItemAtIndex(\n    source: string[][],\n    index: number,\n    items: string[]\n  ): string[][] {\n    if (source?.length > 0) {\n      source[index] = source[index].filter((item) => !items.includes(item));\n      return source;\n    }\n  }\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[ngxOtpPattern]',\n})\nexport class PatternDirective {\n  // allowed keys apart from numeric characters\n  private allowedKeys = [\n    'Backspace',\n    'ArrowLeft',\n    'ArrowRight',\n    'Escape',\n    'Tab',\n  ];\n\n  @Input('ngxOtpPattern') pattern: RegExp;\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): void {\n    if (\n      this.allowedKeys.includes(e.key) ||\n      (e.code === 'KeyA' && e.ctrlKey === true) || // Allow: Ctrl+A\n      (e.code === 'KeyC' && e.ctrlKey === true) || // Allow: Ctrl+C\n      (e.code === 'KeyV' && e.ctrlKey === true) || // Allow: Ctrl+V\n      (e.code === 'KeyX' && e.ctrlKey === true) || // Allow: Ctrl+X\n      (e.code === 'KeyA' && e.metaKey === true) || // Cmd+A (Mac)\n      (e.code === 'KeyC' && e.metaKey === true) || // Cmd+C (Mac)\n      (e.code === 'KeyV' && e.metaKey === true) || // Cmd+V (Mac)\n      (e.code === 'KeyX' && e.metaKey === true) // Cmd+X (Mac)\n    ) {\n      return; // let it happen, don't do anything\n    } else if (!this.pattern.test(e.key)) {\n      e.preventDefault();\n    }\n  }\n}\n","import {\n  Input,\n  OnInit,\n  Output,\n  Component,\n  OnDestroy,\n  QueryList,\n  ElementRef,\n  ViewChildren,\n  EventEmitter,\n  HostListener,\n  AfterViewInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  UntypedFormArray,\n  UntypedFormControl,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { NgxOtpInputService } from '../ngx-otp-input.service';\nimport {\n  NgxOtpStatus,\n  NgxOtpBehavior,\n  NgxOtpInputConfig,\n} from './ngx-otp-input.model';\n\n@Component({\n  selector: 'ngx-otp-input',\n  templateUrl: './ngx-otp-input.component.html',\n  styleUrls: ['./ngx-otp-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxOtpInputComponent implements OnInit, AfterViewInit, OnDestroy {\n  ngxOtpArray = new UntypedFormArray([]);\n  ariaLabels: string[] = [];\n  pattern!: RegExp;\n  styles: string[][] = [];\n\n  otpConfig: NgxOtpInputConfig = {\n    otpLength: 6,\n    autofocus: true,\n    autoblur: true,\n    behavior: NgxOtpBehavior.DEFAULT,\n  };\n\n  private defaultPattern = /^\\d+$/;\n  private DEFAULT_ARIA_LABEL = 'One time password input';\n  private LAST_INPUT_INDEX!: number;\n  private inputs!: HTMLInputElement[];\n  private isNgxOtpArrayDisabled = false;\n  private ngxOtpArray$!: Subscription;\n  private focusedInputHasValue = false;\n\n  @ViewChildren('otpInputElement') otpInputElements: QueryList<ElementRef>;\n\n  @Output() otpChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() fill: EventEmitter<string> = new EventEmitter<string>();\n\n  @HostListener('paste', ['$event']) onPaste(event: ClipboardEvent): void {\n    event.preventDefault();\n    this.handlePaste(event.clipboardData.getData('text'));\n  }\n\n  @Input() set disable(isDisabled: boolean) {\n    this.handleDisable(isDisabled);\n    this.isNgxOtpArrayDisabled = isDisabled;\n  }\n\n  @Input() set config(c: NgxOtpInputConfig) {\n    this.otpConfig = { ...this.otpConfig, ...c };\n    if (this.otpConfig.classList?.input) {\n      this.setInitialStyles();\n    }\n    if (!c.pattern) {\n      this.otpConfig.pattern = this.defaultPattern;\n    }\n  }\n\n  @Input() set status(status: NgxOtpStatus) {\n    this.handleStatusChange(status);\n  }\n\n  constructor(\n    private readonly ngxOtpInputService: NgxOtpInputService,\n    private readonly ref: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.setUpOtpForm();\n    this.setUpAriaLabels();\n    this.LAST_INPUT_INDEX = this.otpConfig.otpLength - 1;\n    this.otpFormChangeListener();\n  }\n\n  ngAfterViewInit(): void {\n    this.setNativeHTMLElements();\n    this.setInitialFocus();\n    this.setNumericInputIfPossible();\n    this.handleDisable(this.isNgxOtpArrayDisabled);\n  }\n\n  ngOnDestroy(): void {\n    this.ngxOtpArray$.unsubscribe();\n  }\n\n  clear(): void {\n    this.removeStyleFromAll(this.otpConfig.classList?.inputFilled);\n    this.ngxOtpArray.reset();\n    this.ref.detectChanges();\n\n    if (this.otpConfig.autofocus) {\n      this.setFocus(0);\n    }\n  }\n\n  handleKeyUp(index: number, value: string): void {\n    if (this.otpConfig.pattern.test(value) && value !== 'Backspace') {\n      this.addStyle(index, this.otpConfig.classList?.inputFilled);\n      if (!this.ngxOtpArray.valid) {\n        this.getFormControlByIndex(index).setValue(value);\n        this.stepForward(index);\n      } else {\n        this.blur();\n      }\n    }\n  }\n\n  handleDelete(index: number): void {\n    this.removeStyle(index, this.otpConfig.classList?.inputFilled);\n    if (\n      (this.otpConfig.behavior === NgxOtpBehavior.LEGACY &&\n        !this.focusedInputHasValue) ||\n      this.otpConfig.behavior !== NgxOtpBehavior.LEGACY\n    ) {\n      this.stepBackward(index);\n    } else {\n      this.focusedInputHasValue = false;\n    }\n  }\n\n  handleFocus(index: number): void {\n    this.focusedInputHasValue = !!this.ngxOtpArray.controls[index].value;\n    if (\n      this.otpConfig.behavior === NgxOtpBehavior.LEGACY &&\n      this.focusedInputHasValue\n    ) {\n      this.inputs[index].select();\n    }\n  }\n\n  stepBackward(index: number): void {\n    if (index > 0) {\n      this.setFocus(index - 1);\n    }\n  }\n\n  stepForward(index: number): void {\n    if (index < this.LAST_INPUT_INDEX) {\n      this.setFocus(index + 1);\n    }\n  }\n\n  private otpFormChangeListener(): void {\n    this.ngxOtpArray$ = this.ngxOtpArray.valueChanges.subscribe((values) => {\n      this.otpChange.emit(values);\n\n      if (this.ngxOtpArray.valid) {\n        this.fill.emit(values.join(''));\n      }\n    });\n  }\n\n  private setUpOtpForm(): void {\n    for (let i = 0; i < this.otpConfig.otpLength; i++) {\n      this.ngxOtpArray.push(\n        new UntypedFormControl(null, [Validators.required])\n      );\n    }\n  }\n\n  private setUpAriaLabels(): void {\n    const labels = this.otpConfig.ariaLabels;\n\n    this.ariaLabels = Array.isArray(labels)\n      ? labels\n      : new Array(this.otpConfig.otpLength).fill(\n          labels || this.DEFAULT_ARIA_LABEL\n        );\n  }\n\n  private setNativeHTMLElements(): void {\n    this.inputs = this.otpInputElements.map((element) => element.nativeElement);\n  }\n\n  private setInitialFocus(): void {\n    if (this.otpConfig.autofocus) {\n      this.setFocus(0);\n    }\n  }\n\n  private setInitialStyles(): void {\n    this.styles = this.ngxOtpInputService.init2DArray(this.otpConfig.otpLength);\n    this.addStyleToAll(this.otpConfig.classList.input);\n  }\n\n  private setFocus(index: number): void {\n    this.inputs[index].focus();\n  }\n\n  private setNumericInputIfPossible(): void {\n    if (this.otpConfig.numericInputMode) {\n      this.otpConfig.pattern = this.defaultPattern;\n      this.inputs.map((element) => {\n        element.setAttribute('inputmode', 'numeric');\n        element.setAttribute('pattern', '[0-9]*');\n      });\n    }\n  }\n\n  private blur(): void {\n    if (this.otpConfig.autoblur) {\n      this.inputs.map((input) => input.blur());\n    }\n  }\n\n  private handlePaste(value: string): void {\n    if (this.otpConfig.pattern.test(value)) {\n      let lastIndex = 0;\n      value\n        .split('')\n        .slice(0, this.otpConfig.otpLength)\n        .map((character: string, index: number) => {\n          this.addStyle(index, this.otpConfig.classList?.inputFilled);\n          this.getFormControlByIndex(index).setValue(character);\n          lastIndex = index;\n        });\n\n      if (this.ngxOtpArray.valid) {\n        this.blur();\n      } else {\n        this.setFocus(lastIndex + 1);\n      }\n    }\n  }\n\n  private handleDisable(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.ngxOtpArray.disable();\n      this.addStyleToAll(this.otpConfig.classList?.inputDisabled);\n    } else {\n      this.ngxOtpArray.enable();\n      this.removeStyleFromAll(this.otpConfig.classList?.inputDisabled);\n    }\n  }\n\n  private handleStatusChange(status: NgxOtpStatus): void {\n    this.removeStyleFromAll([\n      ...this.ngxOtpInputService.toArray(\n        this.otpConfig.classList?.inputSuccess\n      ),\n      ...this.ngxOtpInputService.toArray(this.otpConfig.classList?.inputError),\n    ]);\n\n    if (status) {\n      if (status === 'success') {\n        this.addStyleToAll(this.otpConfig.classList?.inputSuccess);\n      } else if (status === 'error') {\n        this.addStyleToAll(this.otpConfig.classList?.inputError);\n      }\n    }\n  }\n\n  private getFormControlByIndex(index: number): UntypedFormControl {\n    return this.ngxOtpArray.controls[index] as UntypedFormControl;\n  }\n\n  private addStyle(index: number, styles: string | string[]): void {\n    this.styles = this.ngxOtpInputService.addItemAtIndex(\n      this.styles,\n      index,\n      this.ngxOtpInputService.toArray(styles)\n    );\n  }\n\n  private addStyleToAll(styles: string | string[]): void {\n    this.styles = this.ngxOtpInputService.addItemToAll(\n      this.styles,\n      this.ngxOtpInputService.toArray(styles)\n    );\n  }\n\n  private removeStyle(index: number, styles: string | string[]): void {\n    this.styles = this.ngxOtpInputService.removeItemAtIndex(\n      this.styles,\n      index,\n      this.ngxOtpInputService.toArray(styles)\n    );\n  }\n\n  private removeStyleFromAll(styles: string | string[]): void {\n    this.styles = this.ngxOtpInputService.removeItemFromAll(\n      this.styles,\n      this.ngxOtpInputService.toArray(styles)\n    );\n  }\n}\n","<form\n  [ngClass]=\"otpConfig.classList?.container\"\n  class=\"ngx-otp-input-container\"\n>\n  <div\n    *ngFor=\"let control of ngxOtpArray.controls; let i = index\"\n    [ngClass]=\"otpConfig.classList?.inputBox\"\n    class=\"ngx-otp-input-box\"\n  >\n    <label [attr.aria-label]=\"ariaLabels[i]\">\n      <input\n        #otpInputElement\n        [id]=\"'ngx-otp-input-' + i\"\n        [formControl]=\"control\"\n        [ngxOtpPattern]=\"otpConfig.pattern\"\n        [type]=\"otpConfig.isPasswordInput ? 'password' : 'text'\"\n          [ngClass]=\"styles?.length > 0 ? styles[i] : null\"\n        (keyup)=\"handleKeyUp(i, $event.key)\"\n        (keyup.backspace)=\"handleDelete(i)\"\n        (keyup.arrowLeft)=\"stepBackward(i)\"\n        (keyup.arrowRight)=\"stepForward(i)\"\n        (focus)=\"handleFocus(i)\"\n        class=\"ngx-otp-input\"\n        maxlength=\"1\"\n        autocapitalize=\"off\"\n        spellcheck=\"false\"\n      />\n    </label>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { NgxOtpInputComponent } from './component/ngx-otp-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PatternDirective } from './pattern.directive';\nimport { NgxOtpInputService } from './ngx-otp-input.service';\n\n@NgModule({\n  declarations: [NgxOtpInputComponent, PatternDirective],\n  imports: [ReactiveFormsModule, FormsModule, CommonModule],\n  exports: [NgxOtpInputComponent],\n  providers: [NgxOtpInputService],\n})\nexport class NgxOtpInputModule {}\n","/*\n * Public API Surface of ngx-otp-input\n */\n\nexport * from './lib/component/ngx-otp-input.component';\nexport * from './lib/component/ngx-otp-input.model';\nexport * from './lib/ngx-otp-input.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NgxOtpInputService","i4.PatternDirective"],"mappings":"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"}