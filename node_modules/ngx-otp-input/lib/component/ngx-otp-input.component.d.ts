import { OnInit, OnDestroy, QueryList, ElementRef, EventEmitter, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { UntypedFormArray } from '@angular/forms';
import { NgxOtpInputService } from '../ngx-otp-input.service';
import { NgxOtpStatus, NgxOtpInputConfig } from './ngx-otp-input.model';
import * as i0 from "@angular/core";
export declare class NgxOtpInputComponent implements OnInit, AfterViewInit, OnDestroy {
    private readonly ngxOtpInputService;
    private readonly ref;
    ngxOtpArray: UntypedFormArray;
    ariaLabels: string[];
    pattern: RegExp;
    styles: string[][];
    otpConfig: NgxOtpInputConfig;
    private defaultPattern;
    private DEFAULT_ARIA_LABEL;
    private LAST_INPUT_INDEX;
    private inputs;
    private isNgxOtpArrayDisabled;
    private ngxOtpArray$;
    private focusedInputHasValue;
    otpInputElements: QueryList<ElementRef>;
    otpChange: EventEmitter<string[]>;
    fill: EventEmitter<string>;
    onPaste(event: ClipboardEvent): void;
    set disable(isDisabled: boolean);
    set config(c: NgxOtpInputConfig);
    set status(status: NgxOtpStatus);
    constructor(ngxOtpInputService: NgxOtpInputService, ref: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    clear(): void;
    handleKeyUp(index: number, value: string): void;
    handleDelete(index: number): void;
    handleFocus(index: number): void;
    stepBackward(index: number): void;
    stepForward(index: number): void;
    private otpFormChangeListener;
    private setUpOtpForm;
    private setUpAriaLabels;
    private setNativeHTMLElements;
    private setInitialFocus;
    private setInitialStyles;
    private setFocus;
    private setNumericInputIfPossible;
    private blur;
    private handlePaste;
    private handleDisable;
    private handleStatusChange;
    private getFormControlByIndex;
    private addStyle;
    private addStyleToAll;
    private removeStyle;
    private removeStyleFromAll;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxOtpInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxOtpInputComponent, "ngx-otp-input", never, { "disable": "disable"; "config": "config"; "status": "status"; }, { "otpChange": "otpChange"; "fill": "fill"; }, never, never, false>;
}
