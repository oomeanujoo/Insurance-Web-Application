import { ElementRef, EventEmitter, OnChanges } from '@angular/core';
import { IDatetimePopupButtonOptions } from './ngx-bootstrap-datetime-popup-botton-options.interface';
import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import * as i0 from "@angular/core";
export declare class DatetimePopupComponent implements OnChanges {
    private elementRef;
    dropdown: BsDropdownDirective;
    appendTo: string;
    value: Date;
    valueChange: EventEmitter<any>;
    showPopup: boolean;
    showPopupChange: EventEmitter<any>;
    showDate: boolean;
    showTime: boolean;
    showWeeks: boolean;
    showMeridian: boolean;
    showSeconds: boolean;
    datepickerMode: string;
    initDate: Date;
    minDate: Date;
    maxDate: Date;
    dateDisabled: any[];
    nowButton: IDatetimePopupButtonOptions;
    clearButton: IDatetimePopupButtonOptions;
    closeButton: IDatetimePopupButtonOptions;
    minuteStep: number;
    hourStep: number;
    secondsStep: number;
    localValue: Date;
    isOpening: boolean;
    isDropUp: boolean;
    constructor(elementRef: ElementRef);
    ngOnChanges(changes: any): void;
    onWindowScroll(): void;
    onOpenChange(opened: boolean): void;
    onNow(): void;
    onClear(): void;
    onClose(): void;
    onOffClick($event: any): void;
    onPickerChange(picker: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DatetimePopupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DatetimePopupComponent, "datetime-popup", never, { "appendTo": "appendTo"; "value": "value"; "showPopup": "showPopup"; "showDate": "showDate"; "showTime": "showTime"; "showWeeks": "showWeeks"; "showMeridian": "showMeridian"; "showSeconds": "showSeconds"; "datepickerMode": "datepickerMode"; "initDate": "initDate"; "minDate": "minDate"; "maxDate": "maxDate"; "dateDisabled": "dateDisabled"; "nowButton": "nowButton"; "clearButton": "clearButton"; "closeButton": "closeButton"; "minuteStep": "minuteStep"; "hourStep": "hourStep"; "secondsStep": "secondsStep"; }, { "valueChange": "valueChange"; "showPopupChange": "showPopupChange"; }, never, never>;
}
